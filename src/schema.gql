# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Represents one single contact"""
type Contact {
  """Uuid of external user."""
  uuid: ID!

  """Uuid of contact head."""
  contactUuid: ID!
}

type UserBaseDataType {
  uuid: ID!
  name: String!
  email: String!
  type: USER_TYPE!
  groupUuid: ID

  """Saved contacts for specific user"""
  savedContacts: [Contact!]
}

"""Enumeration used to specify user type."""
enum USER_TYPE {
  ADMIN
  REGULAR
  GUEST
}

"""Represents database type of party group."""
type PartyGroup {
  """Uuid of created group"""
  uuid: ID!

  """Name of the party group"""
  name: String!

  """Invitation code of group"""
  code: String!

  """Currency used in party group"""
  currency: CURRENCY!
}

"""Enumeration used to specify currencies."""
enum CURRENCY {
  ALL
  DZD
  AOA
  ARS
  AMD
  AUD
  AZN
  BHD
  BBD
  BYN
  BMD
  BOB
  BAM
  BWP
  BRL
  BGN
  CVE
  KHR
  XAF
  CAD
  KYD
  CLP
  CNY
  COP
  CDF
  CRC
  HRK
  CZK
  DKK
  DOP
  USD
  EGP
  FJD
  GEL
  GHS
  GIP
  GTQ
  GBP
  GYD
  HNL
  HKD
  HUF
  ISK
  INR
  IDR
  IQD
  IMP
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KRW
  KWD
  KGS
  LAK
  EUR
  LBP
  LYD
  CHF
  MOP
  MGA
  MWK
  MYR
  MVR
  MRU
  MUR
  MXN
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NZD
  NIO
  NGN
  MKD
  NOK
  OMR
  PKR
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RON
  RUB
  RWF
  XCD
  SAR
  RSD
  SGD
  ZAR
  LKR
  SZL
  SEK
  TWD
  TJS
  TZS
  THB
  TTD
  TND
  TRY
  TMT
  UGX
  UAH
  AED
  UYU
  UZS
  VEF
  VND
  ZMW
  ZWD
}

type Query {
  dumbQuery: String!
}

type Mutation {
  createRegularUser(input: UserCreateInput!): UserBaseDataType!
  deleteAnyUser(uuid: String!): ID!
  createLoginSession(input: AuthLoginInput!): String!
  refreshLoginSession(
    """Token to refresh"""
    input: String!
  ): String!

  """Mutation used for fetching logged user contacts."""
  contactsGetByUser: [UserBaseDataType!]!
  contactAdd(
    """Email of new contact"""
    input: String!
  ): UserBaseDataType!
  contactDelete(input: String!): ID!
  partyGroupCreate(input: PartyGroupCreateInput!): PartyGroup!
}

input UserCreateInput {
  name: String!
  email: String!
  password: String!
}

input AuthLoginInput {
  email: String!
  password: String!
}

"""Input for creating party group"""
input PartyGroupCreateInput {
  """Name of created group"""
  name: String!

  """Currency used in created group"""
  currency: CURRENCY!
}